/*Задание 1 
Текст задания
1. Создайте массив с элементами 1, 2, 3. Выведите на экран
каждый из этих элементов.
*/
const numbers = [1, 2, 3];
numbers.forEach((el, index, arr) => {
    console.log(el, index, arr);
})
console.log(numbers[0]);
console.log(numbers[1]);
console.log(numbers[2]);

/*
2. Создайте массив с произвольными элементами.
Выведите на экран количество элементов в этом
массиве.
*/
const numbers_us = [1, 2, 3, 4, 5];
console.log(numbers_us.length);

/*
3. Создайте массив с элементами 'a', 'b', 'c'. Запишите вместо
первого элемента число 1, вместо второго - 2, вместо
третьего - 3.
*/

let numbers_user = ['a', 'b', 'c'];
numbers_user[0] = 1;
numbers_user[1] = 2;
numbers_user[2] = 3;
console.log(numbers_user);

/*
Задание 2
1. Создайте массив с элементами 1, 2 и 3. С помощью оператора ++
увеличьте каждый элемент массива на единицу.
*/

let numbers_arr = [1, 2, 3];
for (i=0; i < numbers_arr.length; i++) {
    numbers_arr[i]++;
}
console.log(numbers_arr);

/*

2. Узнайте длину следующего массива:
*/
const arr = [];
arr[3] = 'a'; // 4
arr[8] = 'b'; // 9
console.log(arr.length);
/*
1. Пусть дан такой массив:
*/

const arr = [1, 2, 3];
arr.push(4, 5);
console.log(arr);

/*Добавьте ему в конец элементы 4 и 5.
1. Создайте произвольный массив из 5 элементов, Удалите из него два
элемента. Проверьте, какое станет значение свойства length после
этого.
*/
const array = [1, 2, 3, 4, 5];
array.pop();
array.pop();
console.log(array); // [ 1, 2, 3 ]
console.log(array.length); // 3

/*

Задание 3
1. С помощью цикла for выведите в консоль числа от 11 до 33.
*/
let a;
for (a = 11; a <=33; a++) {
    console.log(a);
}
/*
2. С помощью цикла for выведите в консоль нечетные числа в
промежутке от 1 до 99.
*/
let b;
for (b = 1; b <=99; b++) {
    if (b%2==0) {
        console.log(b);
    } else {
        continue;
    }
}
/*
3. С помощью цикла for выведите в консоль числа от 100 до 0.
*/
let c;
for (c = 100; c >=0; c--) {
    console.log(c);
}
/*
4. Дано число num с неким начальным значением. Умножайте его на 3
столько раз, пока результат умножения не станет больше 1000.
Какое число получится? Посчитайте количество итераций,
необходимых для этого.

*/
let num = 1;
let k= 1000;
j = 0;
while (num<k) {
    num = num*3;
    console.log(num);
    j++;
}
console.log(`Kоличество равно ${num}`);
console.log(`Kоличество итераций равно ${j}`);

/*
Задание 4
1. Дан массив const arr = [2, 5, 9, 15, 1, 4];
Выведите в консоль те элементы массива, которые больше 3-х, но
меньше 10.

*/
const arr = [2, 5, 9, 15, 1, 4];
for (let i = 0; i <=arr.length; i++){
    if (arr[i] > 3 && arr[i] < 10) {
        console.log(arr[i]);
    }
}
console.log(arr);

//console.log(arr.filter(el => el > 3 && el < 10)) // [ 5, 9, 4 ]


/*
1. Найдите сумму четных чисел от 2 до 100.
*/
let sum = 0;
for (i = 0; i<=100; i+=2) {
    sum+=i;
}
console.log(sum);
/*
2. Дан массив const = [2, 5, 9, 3, 1, 4];
Найдите сумму элементов этого массива.
*/
const arr_u= [2, 5, 9, 3, 1, 4];
summ = 0;
for (let i = 0; i < arr_u.length; i++) {
    summ += arr_u[i];
}
console.log(summ)
/*
1. С помощью цикла сформируйте строку '-1-2-3-4-5-6-7-8-9-'.
2. Дан массив с числами. const = [2, 5, 9, 0, 3, 1, 4]; Запустите цикл,
который будет по очереди выводить элементы этого массива в
консоль до тех пор, пока не встретится элемент со значением 0.
После этого цикл должен завершить свою работу.
*/
let str_ = '-';
for (i=1; i<=9; i++) {
    str_+=i;
    str_+='-';
}
console.log(str_);

const array_me = [2, 5, 9, 0, 3, 1, 4];
for (i = 0; i <=array_me.length; i++) {
    if (array_me[i]===0) {
        break;
    } 
    console.log(array_me[i]);
}
/*
Задание 5
1. Пусть у нас дан массив состоящий из 10 элементов с
произвольными числами. Давайте переберем его циклом и числа,
которые делятся на 2, возведем в квадрат и выведем в консоль, а
числа, которые делятся на 3, возведем в куб и выведем в консоль.
2. С помощью двух вложенных циклов выведите на экран следующую
строку:
3. Дан массив const arr = [1, 2, 3, 2, 4, 3, 5, 6, 3, 2, 3];
Подсчитайте количество цифр 3 в этом массиве.
1. Дан следующий массив:
[1, 2, 3, 4, 5]
С помощью метода splice преобразуйте массив в следующий:
[1, 4, 5]
*/


